{"ast":null,"code":"var _jsxFileName = \"/Users/jordan/Desktop/Django React/FrontEnd/src/PatientsTable.js\";\nimport { Component } from \"react\";\nimport React from \"react\";\nimport Table from 'react-bootstrap/Table';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport DataTable from \"react-data-table-component\";\n\nclass PatientsTable extends Component {\n  constructor(...args) {\n    super(...args);\n    this.tableHeader = React.createElement(\"thead\", {\n      className: \"bgvi\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"Patient Name\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"Age\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Symptoms\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"Comments\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"Room Number\")));\n    this.headings = ['Product name', 'SKU', 'Stock quantity', 'Wholesale cost', 'Sale price', 'Quantity sold', 'Gross sales', 'Net sales', 'Notes'];\n  }\n\n  componentDidMount() {\n    fetch('/api/v1/patients', {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.json()).then(result => {\n      console.log(result);\n    }, error => {\n      console.log(error);\n    });\n  } //   const PatientTable = patients.map((cust, index) => PatientRow(cust, index))\n\n\n  /*\n  PatientRow = (patient, index) => {\n       return (\n          <tr key={index} className='even'>\n              <td>{patient.patientName}</td>\n              <td>{patient.age}</td>\n              <td>{patient.symptoms}</td>\n              <td>{patient.comments}</td>\n              <td>{patient.roomNumber}</td>\n          </tr>\n      )\n  }*/\n  render() {\n    const headings = ['Product name', 'SKU', 'Stock quantity', 'Wholesale cost', 'Sale price', 'Quantity sold', 'Gross sales', 'Net sales', 'Notes'];\n    const rows = [['Red and black plaid scarf with thin red stripes and thick black stripes', 124689325, 28, '$35.00', '$60.00', 12, '$720.00', '$300.00', ''], ['Yellow plaid scarf', 124689389, 0, '$35.00', '$60.00', 20, '$1200.00', '$500.00', 'Currently on back order by the supplier. Do not place another order to restock.'], ['Blue plaid scarf', 124689332, 30, '$35.00', '$60.00', 10, '$600.00', '$250.00', ''], ['Pink plaid scarf', 124689376, 16, '$35.00', '$60.00', 4, '$240.00', '$100.00', '']];\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(DataTable, {\n      headings: headings,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }), React.createElement(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      className: \"bgvi\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"Patient Name\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"Age\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"Symptoms\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"Comments\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"Room Number\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default PatientsTable;","map":{"version":3,"sources":["/Users/jordan/Desktop/Django React/FrontEnd/src/PatientsTable.js"],"names":["Component","React","Table","DataTable","PatientsTable","tableHeader","headings","componentDidMount","fetch","method","headers","then","res","json","result","console","log","error","render","rows"],"mappings":"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","sourcesContent":["import { Component } from \"react\";\nimport React from \"react\";\nimport Table from 'react-bootstrap/Table';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport DataTable from \"react-data-table-component\";\n\nclass PatientsTable extends Component {\n    componentDidMount() {\n        fetch('/api/v1/patients', {\n            method: 'GET',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            },\n        })\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    console.log(result)\n                },\n                (error) => {\n                    console.log(error)\n                }\n            )\n    }\n\n\n    //   const PatientTable = patients.map((cust, index) => PatientRow(cust, index))\n\n    tableHeader = <thead className='bgvi'>\n        <tr>\n            <th>Patient Name</th>\n            <th>Age</th>\n            <th>Symptoms</th>\n            <th>Comments</th>\n            <th>Room Number</th>\n        </tr>\n    </thead>\n\n    headings = [\n        'Product name',\n        'SKU',\n        'Stock quantity',\n        'Wholesale cost',\n        'Sale price',\n        'Quantity sold',\n        'Gross sales',\n        'Net sales',\n        'Notes',\n    ];\n\n\n    /*\n    PatientRow = (patient, index) => {\n\n        return (\n            <tr key={index} className='even'>\n                <td>{patient.patientName}</td>\n                <td>{patient.age}</td>\n                <td>{patient.symptoms}</td>\n                <td>{patient.comments}</td>\n                <td>{patient.roomNumber}</td>\n            </tr>\n        )\n    }*/\n    render() {\n        const headings = [\n            'Product name',\n            'SKU',\n            'Stock quantity',\n            'Wholesale cost',\n            'Sale price',\n            'Quantity sold',\n            'Gross sales',\n            'Net sales',\n            'Notes',\n          ];\n\n          const rows = [\n            [\n              'Red and black plaid scarf with thin red stripes and thick black stripes',\n              124689325,\n              28,\n              '$35.00',\n              '$60.00',\n              12,\n              '$720.00',\n              '$300.00',\n              '',\n            ],\n            [\n              'Yellow plaid scarf',\n              124689389,\n              0,\n              '$35.00',\n              '$60.00',\n              20,\n              '$1200.00',\n              '$500.00',\n              'Currently on back order by the supplier. Do not place another order to restock.',\n            ],\n            [\n              'Blue plaid scarf',\n              124689332,\n              30,\n              '$35.00',\n              '$60.00',\n              10,\n              '$600.00',\n              '$250.00',\n              '',\n            ],\n            [\n              'Pink plaid scarf',\n              124689376,\n              16,\n              '$35.00',\n              '$60.00',\n              4,\n              '$240.00',\n              '$100.00',\n              '',\n            ],\n          ];\n        return (\n            <div>\n                <DataTable headings={headings}></DataTable>\n                <Table striped bordered hover>\n                    <thead className='bgvi'>\n                        <tr>\n                            <th>Patient Name</th>\n                            <th>Age</th>\n                            <th>Symptoms</th>\n                            <th>Comments</th>\n                            <th>Room Number</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {/*PatientTable*/}\n                    </tbody>\n                </Table>\n            </div>\n        )\n    }\n\n}\n\n\nexport default PatientsTable;\n\n"]},"metadata":{},"sourceType":"module"}