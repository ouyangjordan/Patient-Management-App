{"ast":null,"code":"var _jsxFileName = \"/Users/jordan/Desktop/Django React/FrontEnd/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport { PatientsTable } from './PatientsTable.js';\nimport { Header } from './Header.js';\nimport { ExportCSV } from './ExportCSV.js';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      patientName: \"\",\n      age: \"\",\n      symptoms: \"\",\n      comments: \"\",\n      roomNumber: \"\"\n    }; //this.patients = []\n    //For template\n\n    this.patients = [{\n      patientName: \"Ashini\",\n      age: \"22\",\n      symptoms: \"Coughing\",\n      comments: \"Has a high temperature\",\n      roomNumber: \"123\"\n    }, {\n      patientName: \"Jordan Ou Yang\",\n      age: \"22\",\n      symptoms: \"Coughing\",\n      comments: \"Has a high temperature\",\n      roomNumber: \"123\"\n    }];\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.addPatient = this.addPatient.bind(this);\n  }\n\n  componentDidMount() {\n    fetch(\"https://api.example.com/items\").then(res => res.json()).then(result => {\n      this.setState({\n        isLoaded: true,\n        items: result.items\n      });\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  handleInputChange(event) {\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  addPatient(event) {\n    event.preventDefault(); //So the form does not submit automatically and refresh page\n\n    this.patients.push({\n      patientName: this.state.patientName,\n      age: this.state.age,\n      symptoms: this.state.symptoms,\n      comments: this.state.comments,\n      roomNumber: this.state.roomNumber\n    }); //PREVIOUSLY WHEN WE DIDN't modify state\n    //our table would not be updated\n    //We have to have state modified for updates to take place in page\n\n    this.setState({\n      patientName: \"\",\n      age: \"\",\n      symptoms: \"\",\n      comments: \"\",\n      roomNumber: \"\"\n    });\n  } //https://reactjs.org/docs/forms.html\n  //Use that when we have a working back end\n\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), \" \", React.createElement(ExportCSV, {\n      csvData: this.patients,\n      fileName: this.state.fileName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-md-4\",\n      class: \"m-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"patientName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Patient Name: \"), React.createElement(\"input\", {\n      name: \"patientName\",\n      class: \"form-control\",\n      id: \"patientName\",\n      type: \"string\",\n      placeholder: \"Enter patient name\",\n      value: this.state.patientName,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      class: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"patientAge\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"Patient Age: \"), React.createElement(\"input\", {\n      name: \"age\",\n      class: \"form-control\",\n      id: \"patientName\",\n      type: \"number\",\n      placeholder: \"Enter patient age\",\n      value: this.state.age,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      class: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"patientSymptoms\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Patient Symptoms: \"), React.createElement(\"input\", {\n      name: \"symptoms\",\n      class: \"form-control\",\n      id: \"patientSymptoms\",\n      type: \"string\",\n      placeholder: \"Enter patient symptoms\",\n      value: this.state.symptoms,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      class: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"patientComments\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"Comments: \"), React.createElement(\"input\", {\n      name: \"comments\",\n      class: \"form-control\",\n      id: \"patientComments\",\n      type: \"string\",\n      placeholder: \"Comments about patient\",\n      value: this.state.comments,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      class: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"patientRoomNumber\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, \"Room Number: \"), React.createElement(\"input\", {\n      name: \"roomNumber\",\n      class: \"form-control\",\n      id: \"patientRoomNumber\",\n      type: \"number\",\n      placeholder: \"Enter patient room number\",\n      value: this.state.roomNumber,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      class: \"btn btn-primary\",\n      onClick: this.addPatient,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \"Add Patient\"))), React.createElement(\"div\", {\n      className: \"col-md-8\",\n      class: \"m-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(PatientsTable, {\n      patients: this.patients,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/jordan/Desktop/Django React/FrontEnd/src/App.js"],"names":["React","PatientsTable","Header","ExportCSV","App","Component","constructor","props","state","patientName","age","symptoms","comments","roomNumber","patients","handleInputChange","bind","addPatient","componentDidMount","fetch","then","res","json","result","setState","isLoaded","items","error","event","target","value","type","checked","name","preventDefault","push","render","fileName"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport { PatientsTable } from './PatientsTable.js'\nimport { Header } from './Header.js'\nimport { ExportCSV } from './ExportCSV.js'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      patientName: \"\",\n      age: \"\",\n      symptoms: \"\",\n      comments: \"\",\n      roomNumber: \"\",\n    };\n\n    //this.patients = []\n\n    //For template\n    this.patients = [\n      {\n        patientName: \"Ashini\",\n        age: \"22\",\n        symptoms: \"Coughing\",\n        comments: \"Has a high temperature\",\n        roomNumber: \"123\"\n      },\n      {\n        patientName: \"Jordan Ou Yang\",\n        age: \"22\",\n        symptoms: \"Coughing\",\n        comments: \"Has a high temperature\",\n        roomNumber: \"123\"\n      }];\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.addPatient = this.addPatient.bind(this);\n  }\n  componentDidMount() {\n    fetch(\"https://api.example.com/items\")\n      .then(res => res.json())\n      .then(\n        (result) => {\n          this.setState({\n            isLoaded: true,\n            items: result.items\n          });\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      )\n  }\n\n  handleInputChange(event) {\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value\n    });\n\n  }\n  addPatient(event) {\n    event.preventDefault(); //So the form does not submit automatically and refresh page\n    this.patients.push({\n      patientName: this.state.patientName, age: this.state.age,\n      symptoms: this.state.symptoms, comments: this.state.comments,\n      roomNumber: this.state.roomNumber\n    });\n\n    //PREVIOUSLY WHEN WE DIDN't modify state\n    //our table would not be updated\n    //We have to have state modified for updates to take place in page\n    this.setState({\n      patientName: \"\",\n      age: \"\",\n      symptoms: \"\",\n      comments: \"\",\n      roomNumber: \"\",\n    });\n  }\n  //https://reactjs.org/docs/forms.html\n  //Use that when we have a working back end\n  render() {\n    return (\n      <div className=\"App\">\n        {/* Beginning of Form */}\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <Header/> <ExportCSV csvData={this.patients} fileName={this.state.fileName} />\n          </div>\n          <div className=\"col-md-4\" class=\"m-5\">\n            <form>\n              <div class=\"form-group\">\n                <label for=\"patientName\">Patient Name: </label>\n                <input\n                  name=\"patientName\"\n                  class=\"form-control\"\n                  id=\"patientName\"\n                  type=\"string\"\n                  placeholder=\"Enter patient name\"\n                  value={this.state.patientName}\n                  onChange={this.handleInputChange} />\n              </div>\n              <div class=\"form-group\">\n                <label for=\"patientAge\">Patient Age: </label>\n                <input\n                  name=\"age\"\n                  class=\"form-control\"\n                  id=\"patientName\"\n                  type=\"number\"\n                  placeholder=\"Enter patient age\"\n                  value={this.state.age}\n                  onChange={this.handleInputChange} />\n              </div>\n              <div class=\"form-group\">\n                <label for=\"patientSymptoms\">Patient Symptoms: </label>\n                <input\n                  name=\"symptoms\"\n                  class=\"form-control\"\n                  id=\"patientSymptoms\"\n                  type=\"string\"\n                  placeholder=\"Enter patient symptoms\"\n                  value={this.state.symptoms}\n                  onChange={this.handleInputChange} />\n              </div>\n              <div class=\"form-group\">\n                <label for=\"patientComments\">Comments: </label>\n                <input\n                  name=\"comments\"\n                  class=\"form-control\"\n                  id=\"patientComments\"\n                  type=\"string\"\n                  placeholder=\"Comments about patient\"\n                  value={this.state.comments}\n                  onChange={this.handleInputChange} />\n              </div>\n              <div class=\"form-group\">\n                <label for=\"patientRoomNumber\">Room Number: </label>\n                <input\n                  name=\"roomNumber\"\n                  class=\"form-control\"\n                  id=\"patientRoomNumber\"\n                  type=\"number\"\n                  placeholder=\"Enter patient room number\"\n                  value={this.state.roomNumber}\n                  onChange={this.handleInputChange} />\n              </div>\n              <button class=\"btn btn-primary\" onClick={this.addPatient} >\n                Add Patient\n              </button>\n            </form>\n          </div>\n          <div className=\"col-md-8\" class=\"m-5\">\n            {/* Beginning of Table*/}\n            <PatientsTable patients={this.patients} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}