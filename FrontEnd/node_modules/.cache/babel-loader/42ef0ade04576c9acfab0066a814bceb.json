{"ast":null,"code":"var _jsxFileName = \"/Users/jordan/Desktop/Microsoft App/patient_input/src/App.js\";\n\n/*import React from 'react';\nimport './App.css';\nimport './Table.css';\n//import Table from './Table';\n\n\nclass NameForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      patientName: \"\",\n      symptoms: \"\",\n    };\n\n    this.students = [{ name: 'Wasif', symptoms: 'Elbow Hurts' }];\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleInputChange(event) {\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value\n    });\n\n  }\n\n  renderTableData() {\n    return this.students.map((student, index) => {\n      const { name, symptoms } = student //destructuring\n      return (\n        <tr key={index}>\n          <td>{name}</td>\n          <td>{symptoms}</td>\n        </tr>\n      )\n    })\n  }\n\n  renderTableHeader() {\n    let header = Object.keys(this.students[0])\n    return header.map((key, index) => {\n      return <th key={index}>{key.toUpperCase()}</th>\n    })\n  }\n\n  handleSubmit(event) {\n\n    //This stops form from default behaviour of refreshing page\n    this.students.push({ name: this.state.patientName.toString(), symptoms: this.state.symptoms.toString() });\n    this.renderTableData();\n\n    //I think this is causing a problem not making our table dynamic\n    event.preventDefault();\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <br />\n        <br />\n        <br />\n        <div id='form'>\n          <label>\n            Patient Name:\n          <input\n              name=\"patientName\"\n              type=\"string\"\n              value={this.state.patientName}\n              onChange={this.handleInputChange} />\n          </label>\n          <label>\n            Symptoms:\n          <input\n              name=\"symptoms\"\n              type=\"string\"\n              value={this.state.symptoms}\n              onChange={this.handleInputChange} />\n          </label>\n          <input type=\"submit\" value=\"Submit\" />\n        </div>\n        <div>\n          <h1 id='title'>Enrolled Patients</h1>\n          <table id='students'>\n            <tbody>\n              <tr>{this.renderTableHeader()}</tr>\n              {this.renderTableData()}\n            </tbody>\n          </table>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default NameForm;*/\nimport React from 'react';\nimport './App.css';\nimport { PatientsTable } from './PatientsTable.js';\nimport { Header } from './Header.js';\nimport { ExportCSV } from './ExportCSV.js';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      patientName: \"\",\n      symptoms: \"\",\n      students: [{\n        name: 'Wasif',\n        symptoms: 'Elbow Hurts'\n      }]\n    };\n    this.students = [{\n      name: 'Wasif',\n      symptoms: 'Elbow Hurts'\n    }];\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleInputChange(event) {\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleSubmit(event) {\n    //This stops form from default behaviour of refreshing page\n    //this.students.push({ name: this.state.patientName.toString(), symptoms: this.state.symptoms.toString() });\n    //this.renderTableData();\n    //console.log(this.custs);\n    console.log(\"asdfasd\");\n    this.students.push({\n      name: this.state.patientName,\n      symptoms: this.state.symptoms\n    }); //I think this is causing a problem not making our table dynamic\n\n    event.preventDefault();\n  }\n  /*\n  customers = () => {\n    let custs = []\n    for (let i = 0; i <= 3; i++) {\n      custs.push({\n        firstName: `first${i}`, lastName: `last${i}`,\n        email: `abc${i}@gmail.com`, address: `000${i} street city, ST`, zipcode: `0000${i}`\n      });\n    }\n    return custs;\n  }*/\n\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, \"Patient Name:\", React.createElement(\"input\", {\n      name: \"patientName\",\n      type: \"string\",\n      value: this.state.patientName,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, \"Symptoms:\", React.createElement(\"input\", {\n      name: \"symptoms\",\n      type: \"string\",\n      value: this.state.symptoms,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }))), React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, \"Customers\")), React.createElement(\"div\", {\n      className: \"col-md-4 center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, React.createElement(ExportCSV, {\n      csvData: this.students,\n      fileName: this.state.fileName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }))), React.createElement(PatientsTable, {\n      customers: this.students,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/jordan/Desktop/Microsoft App/patient_input/src/App.js"],"names":["React","PatientsTable","Header","ExportCSV","App","Component","constructor","props","state","patientName","symptoms","students","name","handleInputChange","bind","handleSubmit","event","target","value","type","checked","setState","console","log","push","preventDefault","render","fileName"],"mappings":"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","sourcesContent":["/*import React from 'react';\nimport './App.css';\nimport './Table.css';\n//import Table from './Table';\n\n\nclass NameForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      patientName: \"\",\n      symptoms: \"\",\n    };\n\n    this.students = [{ name: 'Wasif', symptoms: 'Elbow Hurts' }];\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleInputChange(event) {\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value\n    });\n\n  }\n\n  renderTableData() {\n    return this.students.map((student, index) => {\n      const { name, symptoms } = student //destructuring\n      return (\n        <tr key={index}>\n          <td>{name}</td>\n          <td>{symptoms}</td>\n        </tr>\n      )\n    })\n  }\n\n  renderTableHeader() {\n    let header = Object.keys(this.students[0])\n    return header.map((key, index) => {\n      return <th key={index}>{key.toUpperCase()}</th>\n    })\n  }\n\n  handleSubmit(event) {\n\n    //This stops form from default behaviour of refreshing page\n    this.students.push({ name: this.state.patientName.toString(), symptoms: this.state.symptoms.toString() });\n    this.renderTableData();\n\n    //I think this is causing a problem not making our table dynamic\n    event.preventDefault();\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <br />\n        <br />\n        <br />\n        <div id='form'>\n          <label>\n            Patient Name:\n          <input\n              name=\"patientName\"\n              type=\"string\"\n              value={this.state.patientName}\n              onChange={this.handleInputChange} />\n          </label>\n          <label>\n            Symptoms:\n          <input\n              name=\"symptoms\"\n              type=\"string\"\n              value={this.state.symptoms}\n              onChange={this.handleInputChange} />\n          </label>\n          <input type=\"submit\" value=\"Submit\" />\n        </div>\n        <div>\n          <h1 id='title'>Enrolled Patients</h1>\n          <table id='students'>\n            <tbody>\n              <tr>{this.renderTableHeader()}</tr>\n              {this.renderTableData()}\n            </tbody>\n          </table>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default NameForm;*/\n\n\nimport React from 'react';\nimport './App.css';\nimport { PatientsTable } from './PatientsTable.js'\nimport { Header } from './Header.js'\nimport {ExportCSV} from './ExportCSV.js'\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      patientName: \"\",\n      symptoms: \"\",\n      students : [{ name: 'Wasif', symptoms: 'Elbow Hurts' }]\n    };\n\n    this.students = [{ name: 'Wasif', symptoms: 'Elbow Hurts' }];\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleInputChange(event) {\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value\n    });\n\n  }\n  handleSubmit(event) {\n\n    //This stops form from default behaviour of refreshing page\n    //this.students.push({ name: this.state.patientName.toString(), symptoms: this.state.symptoms.toString() });\n    //this.renderTableData();\n    //console.log(this.custs);\n    console.log(\"asdfasd\");\n\n    this.students.push({\n      name: this.state.patientName, symptoms: this.state.symptoms\n    });\n    //I think this is causing a problem not making our table dynamic\n    event.preventDefault();\n  }\n\n  \n  /*\n  customers = () => {\n    let custs = []\n    for (let i = 0; i <= 3; i++) {\n      custs.push({\n        firstName: `first${i}`, lastName: `last${i}`,\n        email: `abc${i}@gmail.com`, address: `000${i} street city, ST`, zipcode: `0000${i}`\n      });\n    }\n    return custs;\n  }*/\n\n  render() {\n    return (\n      <div className=\"App\">\n        <form onSubmit={this.handleSubmit}>\n          <br />\n          <div id='form'>\n            <label>\n              Patient Name:\n          <input\n                name=\"patientName\"\n                type=\"string\"\n                value={this.state.patientName}\n                onChange={this.handleInputChange} />\n            </label>\n            <label>\n              Symptoms:\n          <input\n                name=\"symptoms\"\n                type=\"string\"\n                value={this.state.symptoms}\n                onChange={this.handleInputChange} />\n            </label>\n            <input type=\"submit\" value=\"Submit\" />\n          </div>\n        </form>\n        <Header />\n        <div className=\"row\">\n            <div className=\"col-md-8\">\n                <h2>Customers</h2>\n            </div>\n            <div className=\"col-md-4 center\">\n                <ExportCSV csvData={this.students} fileName={this.state.fileName} />\n            </div>\n        </div>\n        <PatientsTable customers={this.students}/>\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}