{"ast":null,"code":"var _jsxFileName = \"/Users/jordan/Desktop/Microsoft App/patient_input/FrontEnd/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport { PatientsTable } from './PatientsTable.js';\nimport { Header } from './Header.js';\nimport { ExportCSV } from './ExportCSV.js';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      patientName: \"\",\n      age: \"\",\n      symptoms: \"\",\n      comments: \"\",\n      roomNumber: \"\"\n    };\n    this.patients = [];\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.addPatient = this.addPatient.bind(this);\n  }\n\n  handleInputChange(event) {\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  addPatient(event) {\n    this.patients.push({\n      name: this.state.patientName,\n      symptoms: this.state.symptoms\n    }); //PREVIOUSLY WHEN WE DIDN't modify state\n    //our table would not be updated\n    //We have to have state modified for updates to take place in page\n\n    this.setState({\n      patientName: \"\",\n      age: \"\",\n      symptoms: \"\",\n      comments: \"\",\n      roomNumber: \"\"\n    });\n  } //https://reactjs.org/docs/forms.html\n  //Use that when we have a working back end\n\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Patient Name:\", React.createElement(\"input\", {\n      name: \"patientName\",\n      type: \"string\",\n      value: this.state.patientName,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Age:\", React.createElement(\"input\", {\n      name: \"age\",\n      type: \"number\",\n      value: this.state.age,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Symptoms:\", React.createElement(\"input\", {\n      name: \"symptoms\",\n      type: \"string\",\n      value: this.state.symptoms,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Symptoms:\", React.createElement(\"input\", {\n      name: \"symptoms\",\n      type: \"string\",\n      value: this.state.symptoms,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Symptoms:\", React.createElement(\"input\", {\n      name: \"symptoms\",\n      type: \"string\",\n      value: this.state.symptoms,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      type: \"submit\",\n      value: \"Submit\",\n      onClick: this.addPatient,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Add Patient\")), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"col-md-4 center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(ExportCSV, {\n      csvData: this.patients,\n      fileName: this.state.fileName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }))), React.createElement(PatientsTable, {\n      patients: this.patients,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/jordan/Desktop/Microsoft App/patient_input/FrontEnd/src/App.js"],"names":["React","PatientsTable","Header","ExportCSV","App","Component","constructor","props","state","patientName","age","symptoms","comments","roomNumber","patients","handleInputChange","bind","addPatient","event","target","value","type","checked","name","setState","push","render","fileName"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport { PatientsTable } from './PatientsTable.js'\nimport { Header } from './Header.js'\nimport { ExportCSV } from './ExportCSV.js'\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      patientName: \"\",\n      age: \"\",\n      symptoms: \"\",\n      comments: \"\",\n      roomNumber: \"\",\n    };\n\n    this.patients = [];\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.addPatient = this.addPatient.bind(this);\n  }\n\n  handleInputChange(event) {\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value\n    });\n\n  }\n  addPatient(event) {\n    this.patients.push({\n      name: this.state.patientName, symptoms: this.state.symptoms\n    });\n\n    //PREVIOUSLY WHEN WE DIDN't modify state\n    //our table would not be updated\n    //We have to have state modified for updates to take place in page\n    this.setState({\n      patientName: \"\",\n      age: \"\",\n      symptoms: \"\",\n      comments: \"\",\n      roomNumber: \"\",\n    });\n  }\n  //https://reactjs.org/docs/forms.html\n  //Use that when we have a working back end\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <div id='form'>\n          <label>\n            Patient Name:\n          <input\n              name=\"patientName\"\n              type=\"string\"\n              value={this.state.patientName}\n              onChange={this.handleInputChange} />\n          </label>\n          <label>\n            Age:\n          <input\n              name=\"age\"\n              type=\"number\"\n              value={this.state.age}\n              onChange={this.handleInputChange} />\n          </label>\n          <label>\n            Symptoms:\n          <input\n              name=\"symptoms\"\n              type=\"string\"\n              value={this.state.symptoms}\n              onChange={this.handleInputChange} />\n          </label>\n          <label>\n            Symptoms:\n          <input\n              name=\"symptoms\"\n              type=\"string\"\n              value={this.state.symptoms}\n              onChange={this.handleInputChange} />\n          </label>\n          <label>\n            Symptoms:\n          <input\n              name=\"symptoms\"\n              type=\"string\"\n              value={this.state.symptoms}\n              onChange={this.handleInputChange} />\n          </label>\n          <button type=\"submit\" value=\"Submit\" onClick={this.addPatient} >\n            Add Patient\n              </button>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-md-8\">\n          </div>\n          <div className=\"col-md-4 center\">\n            <ExportCSV csvData={this.patients} fileName={this.state.fileName} />\n          </div>\n        </div>\n        <PatientsTable patients={this.patients} />\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}