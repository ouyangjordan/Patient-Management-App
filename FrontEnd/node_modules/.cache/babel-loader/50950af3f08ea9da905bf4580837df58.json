{"ast":null,"code":"var _jsxFileName = \"/Users/jordan/Desktop/Django React/FrontEnd/src/PatientEntryForm.js\";\nimport { Component } from \"react\";\nimport React from \"react\";\nimport { Header } from './Header.js';\nimport { ExportCSV } from './ExportCSV.js';\n\nclass PatientEntryForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      patientName: \"\",\n      age: \"\",\n      symptoms: \"\",\n      comments: \"\",\n      roomNumber: \"\"\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.addPatient = this.addPatient.bind(this);\n  }\n\n  handleInputChange(event) {\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  addPatient(event) {//event.preventDefault(); //So the form does not submit automatically and refresh page\n\n    /*\n    this.patients.push({\n        patientName: this.state.patientName, age: this.state.age,\n        symptoms: this.state.symptoms, comments: this.state.comments,\n        roomNumber: this.state.roomNumber\n    });*/\n    //PREVIOUSLY WHEN WE DIDN't modify state\n    //our table would not be updated\n    //We have to have state modified for updates to take place in page\n\n    /*\n    this.setState({\n        patientName: \"\",\n        age: \"\",\n        symptoms: \"\",\n        comments: \"\",\n        roomNumber: \"\",\n    });*/\n  }\n\n  addPatientRequest() {\n    fetch('/api/v1/songs/', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        title: \"sadf\",\n        artist: \"sadf\"\n      })\n    }).then(res => res.json()).then(result => {\n      console.log(\"Yeet\");\n      console.log(result);\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      console.log(\"Fail\");\n      console.log(error);\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(ExportCSV, {\n      csvData: this.patients,\n      fileName: this.state.fileName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-md-4\",\n      class: \"m-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"patientName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Patient Name: \"), React.createElement(\"input\", {\n      name: \"patientName\",\n      class: \"form-control\",\n      id: \"patientName\",\n      type: \"string\",\n      placeholder: \"Enter patient name\",\n      value: this.state.patientName,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      class: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"patientAge\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Patient Age: \"), React.createElement(\"input\", {\n      name: \"age\",\n      class: \"form-control\",\n      id: \"patientName\",\n      type: \"number\",\n      placeholder: \"Enter patient age\",\n      value: this.state.age,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      class: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"patientSymptoms\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"Patient Symptoms: \"), React.createElement(\"input\", {\n      name: \"symptoms\",\n      class: \"form-control\",\n      id: \"patientSymptoms\",\n      type: \"string\",\n      placeholder: \"Enter patient symptoms\",\n      value: this.state.symptoms,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      class: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"patientComments\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"Comments: \"), React.createElement(\"input\", {\n      name: \"comments\",\n      class: \"form-control\",\n      id: \"patientComments\",\n      type: \"string\",\n      placeholder: \"Comments about patient\",\n      value: this.state.comments,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      class: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"patientRoomNumber\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \"Room Number: \"), React.createElement(\"input\", {\n      name: \"roomNumber\",\n      class: \"form-control\",\n      id: \"patientRoomNumber\",\n      type: \"number\",\n      placeholder: \"Enter patient room number\",\n      value: this.state.roomNumber,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      class: \"btn btn-primary\",\n      onClick: this.addPatientRequest,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \"Add Patient\")))));\n  }\n\n}\n\nexport default PatientEntryForm;\n/*\ncomponentDidMount() {\nfetch('/api/v1/songs', {\n  method: 'GET',\n  headers: {\n    'Accept': 'application/json',\n    'Content-Type': 'application/json',\n  },\n})\n  .then(res => res.json())\n  .then(\n    (result) => {\n      console.log(\"Yeet\")\n      console.log(result)\n    },\n    // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    (error) => {\n      console.log(\"Fail\")\n      console.log(error)\n    }\n  )\n}\n\naddPatientRequst() {\n\nfetch('/api/v1/songs/', {\n  method: 'POST',\n  headers: {\n    'Accept': 'application/json',\n    'Content-Type': 'application/json',\n  },\n  body: JSON.stringify({\n    title: \"sadf\",\n    artist : \"sadf\"\n  })\n})\n.then(res => res.json())\n.then(\n  (result) => {\n    console.log(\"Yeet\")\n    console.log(result)\n  },\n  // Note: it's important to handle errors here\n  // instead of a catch() block so that we don't swallow\n  // exceptions from actual bugs in components.\n  (error) => {\n    console.log(\"Fail\")\n    console.log(error)\n  }\n)\n}\n*/","map":{"version":3,"sources":["/Users/jordan/Desktop/Django React/FrontEnd/src/PatientEntryForm.js"],"names":["Component","React","Header","ExportCSV","PatientEntryForm","constructor","props","state","patientName","age","symptoms","comments","roomNumber","handleInputChange","bind","addPatient","event","target","value","type","checked","name","setState","addPatientRequest","fetch","method","headers","body","JSON","stringify","title","artist","then","res","json","result","console","log","error","render","patients","fileName"],"mappings":"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","sourcesContent":["import { Component } from \"react\";\nimport React from \"react\";\nimport { Header } from './Header.js'\nimport { ExportCSV } from './ExportCSV.js'\n\nclass PatientEntryForm extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            patientName: \"\",\n            age: \"\",\n            symptoms: \"\",\n            comments: \"\",\n            roomNumber: \"\",\n        };\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.addPatient = this.addPatient.bind(this);\n    }\n\n    handleInputChange(event) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n        this.setState({\n            [name]: value\n        });\n\n    }\n    addPatient(event) {\n\n\n\n\n        //event.preventDefault(); //So the form does not submit automatically and refresh page\n\n        /*\n        this.patients.push({\n            patientName: this.state.patientName, age: this.state.age,\n            symptoms: this.state.symptoms, comments: this.state.comments,\n            roomNumber: this.state.roomNumber\n        });*/\n        //PREVIOUSLY WHEN WE DIDN't modify state\n        //our table would not be updated\n        //We have to have state modified for updates to take place in page\n\n        /*\n        this.setState({\n            patientName: \"\",\n            age: \"\",\n            symptoms: \"\",\n            comments: \"\",\n            roomNumber: \"\",\n        });*/\n    }\n\n    addPatientRequest() {\n\n        fetch('/api/v1/songs/', {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                title: \"sadf\",\n                artist: \"sadf\"\n            })\n        })\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    console.log(\"Yeet\")\n                    console.log(result)\n                },\n                // Note: it's important to handle errors here\n                // instead of a catch() block so that we don't swallow\n                // exceptions from actual bugs in components.\n                (error) => {\n                    console.log(\"Fail\")\n                    console.log(error)\n                }\n            )\n    }\n\n\n    render() {\n        return (\n            <div className=\"App\">\n                <div className=\"row\">\n                    <div className=\"col-md-12\">\n                        <ExportCSV csvData={this.patients} fileName={this.state.fileName} />\n                    </div>\n                    <div className=\"col-md-4\" class=\"m-5\">\n                        <form>\n                            <div class=\"form-group\">\n                                <label for=\"patientName\">Patient Name: </label>\n                                <input\n                                    name=\"patientName\"\n                                    class=\"form-control\"\n                                    id=\"patientName\"\n                                    type=\"string\"\n                                    placeholder=\"Enter patient name\"\n                                    value={this.state.patientName}\n                                    onChange={this.handleInputChange} />\n                            </div>\n                            <div class=\"form-group\">\n                                <label for=\"patientAge\">Patient Age: </label>\n                                <input\n                                    name=\"age\"\n                                    class=\"form-control\"\n                                    id=\"patientName\"\n                                    type=\"number\"\n                                    placeholder=\"Enter patient age\"\n                                    value={this.state.age}\n                                    onChange={this.handleInputChange} />\n                            </div>\n                            <div class=\"form-group\">\n                                <label for=\"patientSymptoms\">Patient Symptoms: </label>\n                                <input\n                                    name=\"symptoms\"\n                                    class=\"form-control\"\n                                    id=\"patientSymptoms\"\n                                    type=\"string\"\n                                    placeholder=\"Enter patient symptoms\"\n                                    value={this.state.symptoms}\n                                    onChange={this.handleInputChange} />\n                            </div>\n                            <div class=\"form-group\">\n                                <label for=\"patientComments\">Comments: </label>\n                                <input\n                                    name=\"comments\"\n                                    class=\"form-control\"\n                                    id=\"patientComments\"\n                                    type=\"string\"\n                                    placeholder=\"Comments about patient\"\n                                    value={this.state.comments}\n                                    onChange={this.handleInputChange} />\n                            </div>\n                            <div class=\"form-group\">\n                                <label for=\"patientRoomNumber\">Room Number: </label>\n                                <input\n                                    name=\"roomNumber\"\n                                    class=\"form-control\"\n                                    id=\"patientRoomNumber\"\n                                    type=\"number\"\n                                    placeholder=\"Enter patient room number\"\n                                    value={this.state.roomNumber}\n                                    onChange={this.handleInputChange} />\n                            </div>\n                            <button class=\"btn btn-primary\" onClick={this.addPatientRequest} >\n                                Add Patient\n                            </button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default PatientEntryForm;\n\n\n\n/*\ncomponentDidMount() {\nfetch('/api/v1/songs', {\n  method: 'GET',\n  headers: {\n    'Accept': 'application/json',\n    'Content-Type': 'application/json',\n  },\n})\n  .then(res => res.json())\n  .then(\n    (result) => {\n      console.log(\"Yeet\")\n      console.log(result)\n    },\n    // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    (error) => {\n      console.log(\"Fail\")\n      console.log(error)\n    }\n  )\n}\n\naddPatientRequst() {\n\nfetch('/api/v1/songs/', {\n  method: 'POST',\n  headers: {\n    'Accept': 'application/json',\n    'Content-Type': 'application/json',\n  },\n  body: JSON.stringify({\n    title: \"sadf\",\n    artist : \"sadf\"\n  })\n})\n.then(res => res.json())\n.then(\n  (result) => {\n    console.log(\"Yeet\")\n    console.log(result)\n  },\n  // Note: it's important to handle errors here\n  // instead of a catch() block so that we don't swallow\n  // exceptions from actual bugs in components.\n  (error) => {\n    console.log(\"Fail\")\n    console.log(error)\n  }\n)\n}\n*/"]},"metadata":{},"sourceType":"module"}